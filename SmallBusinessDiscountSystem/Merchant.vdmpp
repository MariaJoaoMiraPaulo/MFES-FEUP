class Merchant is subclass of User
types
	public String = seq of char;
values
	public SystemFee: real = 3;
instance variables
	public products : set of Product := {};
	private balance: real := 0;
	
operations
-- TODO Define operations here
public Merchant : String ==> Merchant
Merchant(merchantName) == User(merchantName
);

public GetProducts() res: set of Product == return products;
 

public getProductsByName(productName: String) products: set of Product ==
return {product | product in set products & product.name = productName};

public setDiscount(productName: String, discount: real) ==
	for all product in set getProductsByName(productName) do
		product.setDiscount(discount);		
		
public addProduct(product: Product) ==
	products := products union {product}
	pre product not in set products
	post products = products~ union {product};
	
public sellProduct(productName: String, customerDiscount: real, amount: nat) discount: real == 
	for all product in set getProductsByName(productName) do (
		balance := ((product.getPrice() * (1-product.getDiscount()/100)) * (1-customerDiscount/100) * (SystemFee/100)) * amount;
		product.decreaseQuantity(amount);
		return (product.getPrice() - (product.getPrice() * (1-product.getDiscount()/100)) * (1-customerDiscount/100)) * amount;
	);
		
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Merchant