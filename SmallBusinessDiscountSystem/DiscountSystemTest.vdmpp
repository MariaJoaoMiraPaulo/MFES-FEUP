class DiscountSystemTest
types
-- TODO Define types here
values
-- TODO Define values here
instance variables

system : DiscountSystem := new DiscountSystem();
customer1 : Customer := new Customer("Rui");
customer2 : Customer := new Customer("Joana");
merchant1 : Merchant := new Merchant("zara")

operations

private Assert : bool ==> ()
Assert(cond) == return
pre cond;

private testCreateCustomer: () ==> ()
testCreateCustomer() ==
(
 dcl customer: Customer := new Customer("Rui");
 Assert(customer.GetName() = "Rui");
 Assert(customer.GetBalance() = 0)
);

private testCreateMerchant: () ==> ()
testCreateMerchant() ==
(
dcl merchant: Merchant := new Merchant("zara");
Assert(merchant.GetName() = "zara");
Assert(merchant.GetProducts() = {});
Assert(merchant.GetBalance() = 0)
);

private testCustomerJoins: () ==> ()
testCustomerJoins() ==
(
	Assert(system.customers = {})
	--TODO
);

public static main: () ==> ()
main()==
(
	dcl systemTest: DiscountSystemTest := new DiscountSystemTest();

	systemTest.testCreateCustomer();
	systemTest.testCreateMerchant();
	systemTest.testCustomerJoins();
)


functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
CreateCustomer: testCreateCustomer();
CreateMerchant: testCreateMerchant();
CustomerJoins: testCustomerJoins();

end DiscountSystemTest