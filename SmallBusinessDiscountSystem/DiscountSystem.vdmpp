class DiscountSystem
types
-- TODO Define types here
values
-- TODO Define values here
instance variables
	public customers: set of Customer := {};
	public merchants: set of Merchant := {};
	
operations

	public DiscountSystem: () ==> DiscountSystem
	DiscountSystem() == return self;

	public customerJoins : Customer ==> ()
	customerJoins(customer) == customers := customers union {customer}
	pre customer not in set customers
	post customers = customers~ union {customer};
	
	public merchantJoins : Merchant ==> ()
	merchantJoins(merchant) == merchants := merchants union {merchant}
	pre merchant not in set merchants
	post merchants = merchants~ union {merchant};
				
	public transfer(sender, receiver: Customer, value: real) == (sender.withdraw(value);receiver.deposit(value);)
	pre sender in set customers and receiver in set customers and value >=0
	post sender in set customers and receiver in set customers

functions
-- TODO Define functiones here

traces
-- TODO Define Combinatorial Test Traces here
end DiscountSystem